name: deploy review app environment
on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths:
    - 'src/**'
    - 'Dockerfile'
    - '.github/workflows/ci.yml'
    - '.github/workflows/review.yml'

env:
  APP_NAME: ${{ github.event.repository.name }}
  ENVIRONMENT_NAME: review-pr-${{ github.event.pull_request.number }}
  DOCKER_REGISTRY: krogertechnologyprodusw-docker-local.jfrog.io
  DOCKER_REPOSITORY: ${{ github.event.repository.name }}/webapp
  RESOURCE_GROUP_NAME: ${{ secrets.BUILDING_BLOCKS_CENTRALUS_NONPROD_RESOURCE_GROUP }}

jobs:
  review-deploy:
    name: Deploy to review environment
    runs-on: ubuntu-latest
    steps:
    - id: create-deployment
      uses: chrnorm/deployment-action@releases/v1
      name: üîÑ Create continuous deployment
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.event.pull_request.head.ref }}
        description: 'Review app deploy for #${{ github.event.pull_request.number }} with image ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}'
        environment: ${{ env.ENVIRONMENT_NAME }}
        initial_status: in_progress
    - name: üîÑ Login via Azure CLI ‚òÅÔ∏è
      uses: azure/login@v1
      with:
        creds: ${{ secrets.BUILDING_BLOCKS_CENTRALUS_NONPROD_AZURE_CREDENTIALS }}
    - name: üîÑ Create slot ‚òÅÔ∏è
      run: az webapp deployment slot create --name ${{ env.APP_NAME }}-nonprod --slot ${{ env.ENVIRONMENT_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --configuration-source ${{ env.APP_NAME }}-nonprod || true
    - id: deploy
      name: üîÑ Deploy to App Service ‚òÅÔ∏è
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}-nonprod
        images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
        slot-name: ${{ env.ENVIRONMENT_NAME }}
    - name: üîÑ Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        target_url: ${{ steps.deploy.outputs.webapp-url }}
        environment_url: ${{ steps.deploy.outputs.webapp-url }}
        state: success
        deployment_id: ${{ steps.create-deployment.outputs.deployment_id }}
        description: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
    - name: üîÑ Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        target_url: ${{ steps.deploy.outputs.webapp-url }}
        environment_url: ${{ steps.deploy.outputs.webapp-url }}
        state: failure
        deployment_id: ${{ steps.create-deployment.outputs.deployment_id }}
    